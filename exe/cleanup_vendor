#!/usr/bin/env ruby
# frozen_string_literal: true

require 'cleanup_vendor'
require 'optparse'

options = {}

opt_parser = OptionParser.new do |opts|
  name = File.basename(__FILE__)
  opts.banner = "Usage: #{name} [options] [dir]"

  opts.separator ''
  opts.separator 'Specific options:'

  opts.on('-v', '--[no-]verbose', 'Run verbosely') do |v|
    options[:verbose] = v
  end

  opts.on('-0', '--null', 'Print the pathname of the removed file to standard output, followed by an ASCII NUL character (character code 0).') do |d|
    options[:print0] = d
  end

  opts.on('--dry-run', 'Do not delete files') do |d|
    options[:dry_run] = d
  end

  opts.on('-s', '--summary', 'Display a summary after execution') do |s|
    options[:summary] = s
  end

  opts.on('-d', '--directory PATTERN', 'Match on directory') do |pattern|
    options[:directories] ||= []
    options[:directories] << pattern
  end

  opts.on('-f', '--extension PATTERN', 'Match on file') do |pattern|
    options[:files] ||= []
    options[:files] << pattern
  end

  opts.on('-e', '--exclude PATTERN', 'Exclude pattern from matching') do |pattern|
    options[:exclude] ||= []
    options[:exclude] << pattern
  end

  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit
  end

  opts.on_tail('-V', '--version', 'Show version') do
    puts CleanupVendor::VERSION
    exit
  end
end

args = opt_parser.parse!(ARGV)
dir = args.shift || 'vendor/bundle/ruby'

CleanupVendor.run(dir, options)
